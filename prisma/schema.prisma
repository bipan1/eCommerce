// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String
  email         String    @unique
  emailVerified DateTime?
  password      String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  posts         Post[]
  stores        Store[]
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  provider          String
  providerAccountId String
  type              String?
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Post {
  post_id     Int      @id @default(autoincrement())
  userId      Int
  createdAt   DateTime @default(now())
  title       String
  description String
  category    Category @default(COMMUNITY)
  images      String[]
  addressLine String?
  city        String?
  state       String?
  zipCode     String?
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Store {
  store_id    Int       @id @default(autoincrement())
  name        String    @unique
  userId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]
  description String
  contact     String
  coverImage  String?
  addressLine String?
  city        String?
  state       String?
  zipCode     String?
  user        User      @relation(fields: [userId], references: [id])
}

model Product {
  product_id  Int      @id @default(autoincrement())
  name        String
  price       Float
  description String
  image       String[]
  storeId     Int
  store       Store    @relation(fields: [storeId], references: [store_id])
}

enum Role {
  USER
  ADMIN
}

enum Category {
  JOBS
  ROOMS
  HOUSEHOLD
  CARS
  FOODS
  COMMUNITY
  EVENTS
}
